{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/reducer.js","serviceApi/Api.js","redux/storage.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","setFilter","createAction","filterReducer","createReducer","state","payload","Api","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","build","getContacts","query","providesTags","result","map","type","id","deleteContact","mutation","url","method","invalidatesTags","error","addContact","newContact","body","useGetContactsQuery","useDeleteContactMutation","useAddContactMutation","console","log","storage","configureStore","reducer","middleware","getDefaultMiddleware","concat","ContactForm","useState","name","setName","phone","setPhone","addNewContact","contacts","data","handleChange","e","target","value","reset","className","s","form","onSubmit","preventDefault","uuidv4","undefined","find","contact","toLowerCase","alert","input","onChange","pattern","title","required","button","ContactList","delContact","filter","useSelector","list","toLocaleLowerCase","includes","item","btn","onClick","Filter","currentTarget","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.405eb7c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__LqrUC\",\"button\":\"ContactForm_button__13cRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3IRTF\",\"item\":\"ContactsList_item__1ECK1\",\"btn\":\"ContactsList_btn__2e-sF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__9P3Jk\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const setFilter = createAction('filter/set');","import { createReducer } from '@reduxjs/toolkit';\nimport { setFilter } from './actions';\n\nexport const filterReducer = createReducer('', {\n  [setFilter]: (state, { payload }) => (state = payload),\n});","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const Api = createApi({\r\n  reducerPath: 'Api',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61aa6606bfb110001773f21b.mockapi.io/',\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: build => ({\r\n    getContacts: build.query({\r\n      query: () => `contacts`,\r\n      providesTags: result =>\r\n        result\r\n          ? \r\n            [\r\n              ...result.map(({ id }) => ({ type: 'Contacts', id })),\r\n              { type: 'Contacts', id: 'LIST' },\r\n            ]\r\n          : \r\n            [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n    deleteContact: build.mutation({\r\n      query: id => ({\r\n        url: `contacts/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: (result, error, id) => [{ type: 'Contacts', id }],\r\n    }),\r\n    addContact: build.mutation({\r\n      query: newContact => ({\r\n        url: 'contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useDeleteContactMutation,\r\n  useAddContactMutation,\r\n} = Api;\r\n\r\nconsole.log(Api)","import { configureStore } from '@reduxjs/toolkit';\n\nimport { filterReducer } from './reducer';\nimport {Api } from '../serviceApi/Api';\n\nexport const storage = configureStore({\n  reducer: {\n    [Api.reducerPath]: Api.reducer,\n    filter: filterReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware().concat(Api.middleware),\n});","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useAddContactMutation, useGetContactsQuery } from '../../serviceApi/Api';\n\nexport default function ContactForm () {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [addNewContact] = useAddContactMutation()\n  const {data: contacts} = useGetContactsQuery();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case'name' :\n       setName(value);\n       break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default: \n      return;\n    }\n  };\n\n/*  console.log(useGetContactsQuery()) */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      phone,\n      id: uuidv4(),\n    };\n    if (contacts!==undefined&&contacts.find(\n        (contact) => name.toLowerCase() === contact.name.toLowerCase())){\n            alert('Contact is already added !!!');\n            reset();\n            return;\n        }\n    addNewContact(newContact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('')\n  };\n\n  return (\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label>\n            Name\n            <input\n              className={s.input}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label>\n            phone\n            <input\n              className={s.input}\n              onChange={handleChange}\n              type=\"tel\"\n              name=\"phone\"\n              value={phone}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n    );\n}","import s from './ContactsList.module.css';\nimport { useSelector } from 'react-redux';\nimport { useDeleteContactMutation, useGetContactsQuery } from '../../serviceApi/Api';\n\nexport default function ContactList() {\n  const [delContact] = useDeleteContactMutation();\n  const filter = useSelector(state => state.filter);\n  const { data } = useGetContactsQuery();\n  return (\n  <>\n    {data && (\n    <ul className={s.list}>\n      {data.filter(contact =>\n              contact.name.toLocaleLowerCase().includes(filter.toLowerCase()), console.log(data),\n            ).map(({id, name, phone}) =>\n        <li key={id} className={s.item}>\n          <p>{name}</p>\n          <p>{phone}</p>\n          <button  className={s.btn} type='button' onClick={() => delContact(id)}>X</button>\n        </li>)}\n        </ul>)}\n      </>\n      )\n};","import s from './Filter.module.css';\nimport { useState } from 'react';\n\n\nexport default function Filter() {\n  const [filter, setFilter] = useState(\"\");\n\n    const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n    };\n  \n  return (\n    <label>\n      Find contacts by name:\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n}","import './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App () {\n\n  \n\n\n  return (\n      <div className=\"App\">\n        <h2>Phonebook</h2>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n\n  );\n}\n\n\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { storage} from './redux/storage';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={storage}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}